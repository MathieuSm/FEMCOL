import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import glob
import os
from scipy.signal import butter,filtfilt
from scipy.signal import find_peaks
from scipy import stats
from pathlib import Path

# definition of lowpass filter
def butter_lowpass_filter(data, cutoff, order=9):
    normal_cutoff = cutoff / nyq
    # Get the filter coefficients
    b, a = butter(order, normal_cutoff, btype='low', analog=False)
    y = filtfilt(b, a, data)
    return y

Cwd = Path.cwd()
DataPath = Cwd / '02_Data/02_MTS/Failure_testing_demineralized/'
filename_list = [File for File in os.listdir(DataPath) if File.endswith('.csv')]
filename_list.sort()

result = list()
i = 0

for filename in filename_list:
    sample_ID = filename.split('/')[-1].split('_')[1]
    # load csv:
    df = pd.read_csv(str(DataPath / filename_list[i]), skiprows = 2)
    df.rename(columns={'sec': 'time', 'N': 'force_MTS', 'N.1': 'force_lc', 'mm': 'disp_MTS', 'mm.1': 'disp_ext'},
    inplace = True)
    i = i + 1

    # filter signals:
    fs = 102.4  # sample rate, Hz
    cutoff = 10
    nyq = 0.5 * fs
    df['force_MTS_filtered'] = butter_lowpass_filter(df['force_MTS'], cutoff)

    plt.figure()
    plt.title(sample_ID)
    plt.plot(df['disp_ext'], df['force_MTS'], label='MTS raw')
    plt.plot(df['disp_ext'], df['force_MTS_filtered'], label='MTS filtered')
    plt.ylabel('force MTS / N')
    plt.xlabel('disp ext / mm')
    plt.legend()
    # plt.show()
    savepath = Cwd / '02_Data/02_MTS/'
    plt.savefig(os.path.join(savepath, 'failure' + sample_ID + '.png'), dpi=300)


